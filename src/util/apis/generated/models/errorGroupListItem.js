/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a ErrorGroupListItem.
 * @extends models['ErrorGroup']
 */
class ErrorGroupListItem extends models['ErrorGroup'] {
  /**
   * Create a ErrorGroupListItem.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ErrorGroupListItem
   *
   * @returns {object} metadata of ErrorGroupListItem
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ErrorGroupListItem',
      type: {
        name: 'Composite',
        className: 'ErrorGroupListItem',
        modelProperties: {
          state: {
            required: true,
            serializedName: 'state',
            type: {
              name: 'String'
            }
          },
          annotation: {
            required: false,
            serializedName: 'annotation',
            type: {
              name: 'String'
            }
          },
          errorGroupId: {
            required: true,
            serializedName: 'errorGroupId',
            type: {
              name: 'String'
            }
          },
          appVersion: {
            required: true,
            serializedName: 'appVersion',
            type: {
              name: 'String'
            }
          },
          appBuild: {
            required: false,
            serializedName: 'appBuild',
            type: {
              name: 'String'
            }
          },
          count: {
            required: true,
            serializedName: 'count',
            type: {
              name: 'Number'
            }
          },
          deviceCount: {
            required: true,
            serializedName: 'deviceCount',
            type: {
              name: 'Number'
            }
          },
          firstOccurrence: {
            required: true,
            serializedName: 'firstOccurrence',
            type: {
              name: 'DateTime'
            }
          },
          lastOccurrence: {
            required: true,
            serializedName: 'lastOccurrence',
            type: {
              name: 'DateTime'
            }
          },
          exceptionType: {
            required: false,
            serializedName: 'exceptionType',
            type: {
              name: 'String'
            }
          },
          exceptionMessage: {
            required: false,
            serializedName: 'exceptionMessage',
            type: {
              name: 'String'
            }
          },
          exceptionClassName: {
            required: false,
            serializedName: 'exceptionClassName',
            type: {
              name: 'String'
            }
          },
          exceptionClassMethod: {
            required: false,
            serializedName: 'exceptionClassMethod',
            type: {
              name: 'Boolean'
            }
          },
          exceptionMethod: {
            required: false,
            serializedName: 'exceptionMethod',
            type: {
              name: 'String'
            }
          },
          exceptionAppCode: {
            required: false,
            serializedName: 'exceptionAppCode',
            type: {
              name: 'Boolean'
            }
          },
          exceptionFile: {
            required: false,
            serializedName: 'exceptionFile',
            type: {
              name: 'String'
            }
          },
          exceptionLine: {
            required: false,
            serializedName: 'exceptionLine',
            type: {
              name: 'String'
            }
          },
          codeRaw: {
            required: false,
            serializedName: 'codeRaw',
            type: {
              name: 'String'
            }
          },
          reasonFrames: {
            required: false,
            serializedName: 'reasonFrames',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'HandledErrorReasonFrameElementType',
                  type: {
                    name: 'Composite',
                    className: 'HandledErrorReasonFrame'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ErrorGroupListItem;
