/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a InternalHockeyAppCompatibilityResponse.
 */
class InternalHockeyAppCompatibilityResponse {
  /**
   * Create a InternalHockeyAppCompatibilityResponse.
   * @property {string} [ownerType] The owner type of the app. Possible values
   * include: 'user', 'organization'
   * @property {string} [os] The OS of the app. Possible values include:
   * 'Android', 'iOS', 'macOS', 'Windows', 'Custom'
   * @property {string} [platform] The OS of the app. Possible values include:
   * 'Java', 'Objective-C-Swift', 'Cordova', 'React-Native', 'Unity',
   * 'Xamarin', 'Unknown'
   * @property {boolean} [hasCrashes] Does the HockeyApp app have crashes from
   * within the last 90 days?
   * @property {boolean} [hasFeedback] Does the HockeyApp app have feedback
   * from within the last 90 days?
   * @property {boolean} [hasMetrics] Does the HockeyApp app have metrics from
   * within the last 30 days?
   * @property {boolean} [hasExternalBuilds] Does the HockeyApp app have any
   * external builds?
   * @property {boolean} [hasSpecifiedBuildServerUrl] Does the HockeyApp app
   * have any build server URLs specified?
   * @property {boolean} [hasDistributionGroupsOutsideOfOwnership] Does the
   * HockeyApp app have an associated Distribution Group that is owned by a
   * different owner?
   * @property {boolean} [ownerHasDistributionGroups] Does the HockeyApp app's
   * owner own any Distribution Groups?
   * @property {string} [bugtrackerType] Does the HockeyApp app have any
   * bugtracker configured? Which type?. Possible values include: 'none',
   * 'vso', 'jira5', 'github', 'other'
   * @property {array} [webhookTypes] Does the HockeyApp app have any webhooks
   * configured? Which types?
   */
  constructor() {
  }

  /**
   * Defines the metadata of InternalHockeyAppCompatibilityResponse
   *
   * @returns {object} metadata of InternalHockeyAppCompatibilityResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'InternalHockeyAppCompatibilityResponse',
      type: {
        name: 'Composite',
        className: 'InternalHockeyAppCompatibilityResponse',
        modelProperties: {
          ownerType: {
            required: false,
            serializedName: 'owner_type',
            type: {
              name: 'String'
            }
          },
          os: {
            required: false,
            serializedName: 'os',
            type: {
              name: 'String'
            }
          },
          platform: {
            required: false,
            serializedName: 'platform',
            type: {
              name: 'String'
            }
          },
          hasCrashes: {
            required: false,
            serializedName: 'has_crashes',
            type: {
              name: 'Boolean'
            }
          },
          hasFeedback: {
            required: false,
            serializedName: 'has_feedback',
            type: {
              name: 'Boolean'
            }
          },
          hasMetrics: {
            required: false,
            serializedName: 'has_metrics',
            type: {
              name: 'Boolean'
            }
          },
          hasExternalBuilds: {
            required: false,
            serializedName: 'has_external_builds',
            type: {
              name: 'Boolean'
            }
          },
          hasSpecifiedBuildServerUrl: {
            required: false,
            serializedName: 'has_specified_build_server_url',
            type: {
              name: 'Boolean'
            }
          },
          hasDistributionGroupsOutsideOfOwnership: {
            required: false,
            serializedName: 'has_distribution_groups_outside_of_ownership',
            type: {
              name: 'Boolean'
            }
          },
          ownerHasDistributionGroups: {
            required: false,
            serializedName: 'owner_has_distribution_groups',
            type: {
              name: 'Boolean'
            }
          },
          bugtrackerType: {
            required: false,
            serializedName: 'bugtracker_type',
            type: {
              name: 'String'
            }
          },
          webhookTypes: {
            required: false,
            serializedName: 'webhook_types',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = InternalHockeyAppCompatibilityResponse;
