/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * private Apple connection secrets response
 *
 * @extends models['PrivateAppleSecretResponse']
 */
class PrivateAppleCertificateSecretResponse extends models['PrivateAppleSecretResponse'] {
  /**
   * Create a PrivateAppleCertificateSecretResponse.
   * @property {object} data apple secret details
   * @property {string} [data.base64Certificate] The certificate contents in
   * base 64 encoded string
   * @property {string} [data.password] The password for the certificate
   * @property {string} [data.displayName] The display name (CN) of the
   * certificate
   * @property {string} [data.certificateValidityStartDate] The date-time from
   * which the certificate is valid
   * @property {string} [data.certificateValidityEndDate] The date-time till
   * which the certificate is valid
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of PrivateAppleCertificateSecretResponse
   *
   * @returns {object} metadata of PrivateAppleCertificateSecretResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PrivateAppleCertificateSecretResponse',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'serviceType',
          clientName: 'serviceType'
        },
        uberParent: 'PrivateSharedConnectionResponse',
        className: 'PrivateAppleCertificateSecretResponse',
        modelProperties: {
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          isValid: {
            required: false,
            serializedName: 'isValid',
            type: {
              name: 'Boolean'
            }
          },
          is2FA: {
            required: false,
            serializedName: 'is2FA',
            type: {
              name: 'Boolean'
            }
          },
          serviceType: {
            required: true,
            serializedName: 'serviceType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          data: {
            required: true,
            serializedName: 'data',
            type: {
              name: 'Composite',
              className: 'AppleCertificateSecretDetails'
            }
          }
        }
      }
    };
  }
}

module.exports = PrivateAppleCertificateSecretResponse;
